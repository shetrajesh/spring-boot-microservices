name: Catalog Service CI/CD

on:
  push:
    paths:
      - catalog-service/**
    branches:
      - '**'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      working-directory: ./catalog-service
    defaults:
      run:
        working-directory: ${{ env.working-directory}}
    steps:
      # 1️⃣ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Set up JDK
      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      # 3️⃣ Build with Maven
      - name: Build with Maven
        run: ./mvnw -ntp verify

#       4️⃣ Run unit tests
      - name: Run Tests
        run: mvn test

      # 5️⃣ Upload JAR as an artifact (optional)
#      - name: Upload packaged JAR
#        uses: actions/upload-artifact@v4
#        with:
#          name: catalog-jar
#          path: target/*.jar
#
#  docker:
#    name: Build & Push Docker Image
#    runs-on: ubuntu-latest
#    needs: build
#
#    permissions:
#      contents: read
#      packages: write
#
#    steps:
#      # 1️⃣ Checkout code
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      # 2️⃣ Log in to GitHub Container Registry (or Docker Hub)
#      - name: Log in to GitHub Container Registry
#        uses: docker/login-action@v3
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      # 3️⃣ Build Docker image
#      - name: Build Docker image
#        run: |
#          docker build -t ghcr.io/${{ github.repository }}/catalog-service:latest .
#
#      # 4️⃣ Push Docker image
#      - name: Push Docker image
#        run: |
#          docker push ghcr.io/${{ github.repository }}/catalog-service:latest
