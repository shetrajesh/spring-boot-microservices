version: '3'

vars:
  MVNW:
    sh: |
      if [ "$OS" = "Windows_NT" ]; then
        echo "cmd /c mvnw.cmd"
      else
        echo "./mvnw"
      fi

  DC_DIR: "deployment/docker-compose"
  INFRA_DC_FILE: "{{.DC_DIR}}/infra.yml"
  APP_DC_FILE: "{{.DC_DIR}}/apps.yml"
  IMAGE_DC_FILE: "{{.DC_DIR}}/hubapp.yml"

tasks:
  default:
    cmds:
      - task: test

  test:
    deps: [format]
    cmds:
      - "{{.MVNW}} clean verify"

  format:
    cmds:
      - "{{.MVNW}} spotless:apply"

  build:
    deps: [ format ]
    cmds:
      - "{{.MVNW}} -pl catalog-service spring-boot:build-image -DskipTests"

  start_local_app:
    deps: [ build ]
    cmds:
      - "docker compose -f {{.INFRA_DC_FILE}} -f {{.APP_DC_FILE}} up -d"

  stop_local_app:
    cmds:
      - "docker compose -f {{.INFRA_DC_FILE}} -f {{.APP_DC_FILE}} stop"
      - "docker compose -f {{.INFRA_DC_FILE}} -f {{.APP_DC_FILE}} rm -f"

  restart_local_app:
    cmds:
      - task: stop_local_app
      - task: sleep
      - task: start_local_app

  start_infra:
    cmds:
      - "docker compose -f {{.INFRA_DC_FILE}} up -d"

  stop_infra:
    cmds:
      - "docker compose -f {{.INFRA_DC_FILE}} stop"
      - "docker compose -f {{.INFRA_DC_FILE}} rm -f"

  restart_infra:
    cmds:
      - task: stop_infra
      - task: sleep
      - task: start_infra

  sleep:
    vars:
      DURATION: '{{default 5 .DURATION}}'
    cmds:
      - sleep {{.DURATION}}

  runapp:
    cmds:
      - "{{.MVNW}} spring-boot:run"

  start_app_using_image:
    cmds:
      - "docker compose -f {{.INFRA_DC_FILE}} -f {{.IMAGE_DC_FILE}} up -d"

  stop_local_app:
    cmds:
      - "docker compose -f {{.INFRA_DC_FILE}} -f {{.IMAGE_DC_FILE}} stop"
      - "docker compose -f {{.INFRA_DC_FILE}} -f {{.IMAGE_DC_FILE}} rm -f"